package com.example.crud.Service;

import java.util.List;
import java.util.Objects;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.crud.entity.Employee;
import com.example.crud.repository.EmployeeRepository;

//business logic is stored in service layer
//service layer is middle man betwn controller and Repository which has communication with database

@Service
public class EmployeeServiceImpl implements EmployeeService {

	@Autowired
    private EmployeeRepository employeeRepository;
	////////////////////////////////////////////////////////below code is autogenerated when I implemented EmployService
	//

	public Employee saveEmployee(Employee employee) {
		// TODO Auto-generated method stub
		return employeeRepository.save(employee);
	}

	public List<Employee> fetchAllEmployees() {
		List<Employee> allEmployees = employeeRepository.findAll();
        return allEmployees;
	}

	public Employee getEmployeeById(Long id) {
		java.util.Optional<Employee> employee = employeeRepository.findById(id);
        if (employee.isPresent()) {
            return employee.get();
        }
        return null;
	}

	public Employee updateEmployeeById(Long id, Employee employee) {
		java.util.Optional<Employee> employee1 = employeeRepository.findById(id);

        if (employee1.isPresent()) {
            Employee originalEmployee = employee1.get();

            if (Objects.nonNull(employee.getEmpname()) && !"".equalsIgnoreCase(employee.getEmpname())) {
                originalEmployee.setEmpname(employee.getEmpname());
            }
            if (Objects.nonNull(employee.getEmpsalary()) && employee.getEmpsalary() != 0) {
                originalEmployee.setEmpsalary(employee.getEmpsalary());
            }
            return employeeRepository.save(originalEmployee);
        }
        return null;
	}

	public String deleteDepartmentById(Long id) {
		if (employeeRepository.findById(id).isPresent()) {
            employeeRepository.deleteById(id);
            return "Employee deleted successfully";
        }
        return "No such employee in the database";
	}
	
	
	
	}


